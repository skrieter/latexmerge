#! /bin/bash
# -----------------------------------------------------------------------------
# latexmerge - A program mergeing a complex latex document with sub files
#              into a single file and copying all required to the same folder
# Copyright (C) 2023  Sebastian Krieter
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program  If not, see <https://www.gnu.org/licenses/>.
#
# See <https://github.com/skrieter/latexmerge> for further information.
# -----------------------------------------------------------------------------

tex_file="$1"

if [ $# -gt 1 ] ; then
    bibtool=$2
else
	bibtool="bibtex"
fi

out_path="merged"
temp_path="${out_path}/temp"

mkdir ${out_path}
mkdir ${temp_path}

if pdflatex -draftmode -halt-on-error -shell-escape -interaction=batchmode -output-directory=${temp_path} "${tex_file}" > /dev/null ; then
	echo "compiled original"
else
	echo "could not compile original" >&2
	exit 1
fi

if sed -n -E "s/^File: (.*) Graphic file .*$/\1/p" "${temp_path}/${tex_file}.log" > ${temp_path}/imgs ; then
	echo "found image files"
else
	echo "could not find immage files" >&2
	exit 1
fi

case ${bibtool} in
  bibtex)
    if bibtex -terse "${temp_path}/${tex_file}.aux" > /dev/null ; then
		echo "run bibtex"
	else
		echo "could not run bibtex" >&2
		exit 1
	fi
	if latexpand --empty-comments --expand-usepackage --expand-bbl "${temp_path}/${tex_file}.bbl" -o "${temp_path}/${tex_file}.tex" "${tex_file}.tex" &> /dev/null ; then
		echo "run latexpand"
	else
		echo "could not run latexpand" >&2
		exit 1
	fi
    ;;
  biber)
    if biber "${temp_path}/${tex_file}.aux"  > /dev/null ; then
		echo "run biber"
	else
		echo "could not run biber" >&2
		exit 1
	fi
	if latexpand --empty-comments --expand-usepackage --biber "${temp_path}/${tex_file}.bbl" -o "${temp_path}/${tex_file}.tex" "${tex_file}.tex" &> /dev/null ; then
		echo "run latexpand"
	else
		echo "could not run latexpand" >&2
		exit 1
	fi
    ;;
  *)
    echo "unkown bibtool ${bibtool}" >&2
    exit 1
    ;;
esac

readarray -t tex_imgs < ${temp_path}/imgs
length=${#tex_imgs[@]}
for (( j=0; j<length; j++ ));
do
	img_path="${tex_imgs[$j]}"
	img_name=$(basename -- "$img_path")
	cp $img_path "${out_path}/$img_name" &> /dev/null
done
echo "moved images"

if sed -E 's/(\\includegraphics\s*(\[.*\])?)\s*\{(.+\/)*(.*)\}/\1{\4}/' "${temp_path}/${tex_file}.tex" >> "${temp_path}/${tex_file}_2.tex" ; then
	echo "replaced image paths in includegraphics"
else
	echo "could not replace image paths in includegraphics" >&2
	exit 1
fi

if sed -E 's/(\\graphicspath[\s{[]?)/%\1/' "${temp_path}/${tex_file}_2.tex" >> "${out_path}/${tex_file}.tex" ; then
	echo "disabled graphicspath command"
else
	echo "could not disable graphicspath command" >&2
	exit 1
fi

rm -r ${temp_path}

cd ${out_path}

if latexmk -quiet -silent -pdf -pdflatex="pdflatex -shell-escape -interaction=batchmode -halt-on-error" "${tex_file}" >& /dev/null ; then
	echo "compiled merged file"
else
	echo "could not compile merged file" >&2
	cat "${tex_file}.log" | grep "Error"
	exit 1
fi
latexmk -c "${tex_file}" >& /dev/null
